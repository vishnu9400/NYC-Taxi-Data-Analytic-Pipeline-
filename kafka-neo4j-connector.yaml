apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-neo4j-connector
  labels:
    app: kafka-neo4j-connector
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-neo4j-connector
  template:
    metadata:
      labels:
        app: kafka-neo4j-connector
    spec:
      containers:
        - name: kafka-neo4j-connector
          image: veedata/kafka-neo4j-connect:latest2
          env:
            - name: CONNECT_CONFIG_STORAGE_TOPIC
              value: "connect-configs"
            - name: CONNECT_BOOTSTRAP_SERVERS
              value: "kafka-service:29092"
            - name: CONNECT_OFFSET_STORAGE_TOPIC
              value: "connect-offsets"
            - name: CONNECT_GROUP_ID
              value: "kafka-neo4j-group"
            - name: CONNECT_STATUS_STORAGE_TOPIC
              value: "connect-status"
            - name: CONNECT_KEY_CONVERTER
              value: "org.apache.kafka.connect.json.JsonConverter"
            - name: CONNECT_REST_PORT
              value: "8083"
            - name: CONNECT_VALUE_CONVERTER
              value: "org.apache.kafka.connect.json.JsonConverter"
            - name: CONNECTOR_CLASS
              value: "streams.kafka.connect.sink.Neo4jSinkConnector"
            - name: NEO4J_PASSWORD
              value: "project1phase2"
            - name: TOPICS
              value: "nyc_taxicab_data"
            - name: NEO4J_URI
              value: "bolt://neo4j-service:7687"
            - name: NEO4J_USERNAME
              value: "neo4j"
            - name: NEO4J_TOPIC_CYPHER_nyc_taxicab_data
              value: |
                MERGE (pickup:Location {name: toInteger(event.PULocationID)})
                MERGE (dropoff:Location {name: toInteger(event.DOLocationID)})
                MERGE (pickup)-[trip:TRIP]->(dropoff)
                ON CREATE SET trip.distance = toFloat(event.trip_distance), 
                              trip.fare = toFloat(event.fare_amount), 
                              trip.pickup_time = datetime(event.tpep_pickup_datetime),
                              trip.dropoff_time = datetime(event.tpep_dropoff_datetime)
                ON MATCH SET trip.distance = toFloat(event.trip_distance), 
                            trip.fare = toFloat(event.fare_amount), 
                            trip.pickup_time = datetime(event.tpep_pickup_datetime),
                            trip.dropoff_time = datetime(event.tpep_dropoff_datetime)

---
apiVersion: v1
kind: Service
metadata:
  name: kafka-neo4j-connector-service
spec:
  selector:
    app: kafka-neo4j-connector
  ports:
    - protocol: TCP
      port: 8083
      targetPort: 8083
